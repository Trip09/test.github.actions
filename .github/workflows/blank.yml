---
name: Run Cypress Tests (GHA) - Manually -start

on:
  pull_request:
    branches:
      - '*'
      - '!validation'
      - '!tandem-6-0-5'
  workflow_dispatch:
    inputs:
      manually_started:
        description: 'Do you want to run the tests?'
        default: false
        type: boolean
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      should_execute: ${{ steps.filter.outputs.should_execute }}
    steps:
      - name: We only need to checkout if this is manually started.
        uses: actions/checkout@v3
        if: ${{ github.event.inputs.manually_started == 'true'  }}

      # using a forked version of the original library which supports negation
      - uses: AurorNZ/paths-filter@v3
        id: filter
        with:
          filters: |
            should_execute:
              - 'package.json'
              - 'package-lock.json'
              - '.github/workflows/e2e_tests_gha.yml'
              - 'apps/main-api/**'
              - 'apps/tandem-api/**'
              - 'apps/web/**'
              - 'apps/web-e2e/**'
              - 'libs/apis/**'
              - 'libs/data-layer/**'
              - 'libs/golden-data/**'
              - 'libs/models/**'
              - 'libs/ng/**'
              - 'libs/shared/**'
              - 'libs/testing/**'
              - '!**.tf'
              - '!**.md'

  e2e_test:
    needs: changes
    if: ${{ needs.changes.outputs.should_execute == 'true' }}
    timeout-minutes: 45
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        containers: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/install-dependencies
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: '5.0.5'
          mongodb-replica-set: rsTest
      - env:
          NODE_OPTIONS: --max_old_space_size=8192
          CYPRESS_env: e2e
          CYPRESS_e2e_base_url: http://localhost:4200
          CYPRESS_e2e_email: admin@apprentice.io
          CYPRESS_e2e_password: Admin1234!
          CYPRESS_e2e_user_email: user@apprentice.io
          CYPRESS_e2e_user_password: User1234!
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_opc_ua_password: ${{ secrets.CYPRESS_OPC_UA_PASSWORD }},
          CYPRESS_opc_ua_cert: ${{ secrets.CYPRESS_OPC_UA_CERT }},
          CYPRESS_ignition_scada_password: ${{ secrets.CYPRESS_IGNITION_SCADA_PASSWORD }},
          CYPRESS_osisoft_pi_password: ${{ secrets.CYPRESS_OSISOFT_PI_PASSWORD }}
          NODE_ENV: development
          MONGODB_URL: mongodb://localhost:27017/apprenticefs
          MONGODB_URI: mongodb://localhost:27017/integrations
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MONGOOSE_SCHEMA_STRICT: 'true'
          DD_ENV: ''
          afsEnv: development
          ALLOW_ORIGINS: '*'
          ALLOW_ANY_ORIGIN_WITH_CREDENTIALS_UNSAFE: 'true'
          SESSION_COOKIE_SECURE: 'false'
          PORT: '1337'
          COMPUTER_VISION_URL: 'http://localhost:8080'
          BUCKET_PER_ORG: 'false'
          BUCKET_PER_ORG_BOOTSTRAP: 'false'
          NEXMO_CONFERENCE_NUMBER: '3024732380'
          NEXMO_CONFERENCE_NUMBER_PRETTY: '+1 (302) 473-2380'
          PORTAL_URL: 'https://jhk-dev.ngrok.io'
          PDF_SERVICE_URL: 'http://localhost:13337'
          ENV: 'LOCAL'
          LOCAL_APPR_API_URL: 'http://localhost:1337'
          LOCAL_TEST_ORG_NAME: 'Cypress Test Org Local'
          LOCAL_TEST_ORG_NAME_ID: 'cypress-tests-local'
          LOCAL_TEST_ORG_POSTFIX: 'cypress-tests-local'
          LOCAL_BASE_URL: 'http://cypress-tests-local.localhost:4200'
          LOCAL_ADMIN_EMAIL: 'apprentice.gd+cypress-tests-local@gmail.com'
          LOCAL_ADMIN_PASSWORD: 'Admin1234!'
          LOCAL_MONGO_URI: 'mongodb://localhost:27017'
          LOCAL_MONGO_DB: 'apprenticefs'
          MAILHOG_PORT: '8025'
          MAILHOG_PORT_INTERNAL: '1025'
          MAILHOG_ENABLED: 'true'
          INTEGRATIONS_BASE_URL: 'http://localhost:1338'
          TESTS_VEEVA_USERNAME: ${{secrets.TESTS_VEEVA_USERNAME}}
          TESTS_VEEVA_PASSWORD: ${{secrets.TESTS_VEEVA_PASSWORD}}
          TESTS_IGNITION_USERNAME: ${{secrets.TESTS_IGNITION_USERNAME}}
          TESTS_IGNITION_PASSWORD: ${{secrets.TESTS_IGNITION_PASSWORD}}
          TESTS_OSISOFT_PI_USERNAME: ${{secrets.TESTS_OSISOFT_PI_USERNAME}}
          TESTS_OSISOFT_PI_PASSWORD: ${{secrets.TESTS_OSISOFT_PI_PASSWORD}}
          GOLDEN_DATASET_IMPORT_ENABLED: true
          SECRET_MANAGER_ADAPTER: memory
          LOG_LEVEL: fatal

        uses: cypress-io/github-action@v3
        with:
          start: |
            npx nx serve web
            npx nx serve main-api
            docker run -d -p 1025:1025 -p 8025:8025 mailhog/mailhog
          wait-on: 'http://localhost:4200, http://localhost:1337, http://localhost:8025'
          wait-on-timeout: 300
          browser: chrome
          install: false
          record: true
          parallel: true
          headless: true
          group: Tests on Node v16
          project: apps/web-e2e
          config-file: config.ci.json
          spec: '**/*.feature'

      - if: always()
        name: Generate Reports
        run: npx nx e2e-report-generate web-e2e

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-results-${{ matrix.containers }}
          path: apps/web-e2e/src/reporting

      - name: Report Failure to Slack
        if: failure()
        uses: ./.github/actions/notify-slack-cypress
        with:
          auth-token: ${{ secrets.SLACK_BOT_TOKEN }}
          deploy-env: ${{ env.afsEnv }}
          project: E2E Web Cypress
          report-url: https://dashboard.cypress.io/organizations/a58a6ac1-d99d-4a90-8215-4d8092339284/projects
          deploy-result: failure

  e2e_test_finish:
    name: Cypress Tests Finished
    needs: e2e_test
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: always()
    defaults:
      run:
        shell: bash
    steps:
      - name: Verifying Cypress Test Results
        run: |
          if echo ${{ needs.e2e_test.result }} | grep -c "failure"
          then
            echo "Cypress tests have failed"
            exit 1
          elif echo ${{ needs.e2e_test.result }} | grep -c "skipped"
          then
            echo "No changes made that impact Cypress tests. Skipping execution."
          else
            echo "Cypress tests have completed successfully"
          fi
