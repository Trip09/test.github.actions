---
name: deploy

#on:
#  workflow_run:
#    workflows:
#      - 'learn-github-actions'
#    types:
#      - completed
on: [push]

jobs:
  deploy:
    - uses: actions/github-script@v5
      id: test
      with:
        result-encoding: string
        script: |
          const commit_details = await github.git.getCommit({owner: context.repo.owner, repo: context.repo.repo, commit_sha: context.sha});
          return {deployment_at: new Date(), commit_at: commit_details.data.author.date)};

    - run: echo "COMMIT_AT --- $COMMIT_AT -- DEPLOYMENT_AT -- $DEPLOYMENT_AT -- TTT -- $TTT --"
      env:
        TTT: ${{ steps.dates.outputs.result }}
        COMMIT_AT: ${{ steps.dates.outputs.result.commit_at }}
        DEPLOYMENT_AT: ${{ steps.dates.outputs.result.deployment_at }}
      shell: bash

#    name: Deploy ${{ matrix.project }} to ${{ matrix.env }}
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        env:
#          - env_a
#          - env_b
#        project:
#          - project_a
#          - project_b
#    steps:
#      - uses: actions/checkout@v2
#
#      - id: validate
#        uses: ./.github/actions/validate-env
#        with:
#          env: ${{ matrix.env }}
#          project: ${{ matrix.project }}
#
#      - if: fromJson(steps.validate.outputs.has-env)
#        uses: ./.github/actions/deploy
#        with:
#          run_db_migrations_env: ${{ steps.validate.outputs.run_db_migrations_env }}
#          env: ${{ matrix.env }}
#          project: ${{ matrix.project }}
